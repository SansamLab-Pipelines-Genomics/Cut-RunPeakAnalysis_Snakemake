##################################################################
##                       import modules                         ##
##################################################################

configfile: "config/config.yml"
import pandas as pd
import shutil
from datetime import datetime
now = datetime.now()
tmstmp = str(now.strftime("%y%m%d_%H%M"))


##################################################################
##                read and modify samples table                 ##
##################################################################

# this reads the CSV file and sets an index using the values in the sample column.
samples_table = pd.read_csv(config["samples_csv"]).set_index("sample", drop=False)
samples_lst = samples_table['sample'].to_list()

##################################################################
##                           rules                              ##
##################################################################


# to run snakemake without explicitly requesting any output files on the command line, we must request output files in the first rule. Therefore we include this otherwise useless rule here
rule all:
    input:
        expand(
            "results/matrixOfReadsAcrossPeakSummits/{sample}_readCountsAcrossSummits.tab",
            sample = samples_lst
        ),
        expand(
            "results/heatPlotOfReadsAcrossPeakSummits/{sample}_heatPlotAcrossPeakSummits.rds",
            sample = samples_lst
        ),
        expand(
            "results/deeptoolsHeatPlotOfReadsAcrossPeakSummits/{sample}_heatPlotAcrossPeakSummits.pdf",
            sample = samples_lst
        ),
        
        
##################################################################
##                       document run                           ##
##################################################################

# copy config and samples files to a directory
rule copy_config_files:
    output:
        "results/" + tmstmp + "_run_details_{sample}/config.yml",
        "results/" + tmstmp + "_run_details_{sample}/" + config["samples_csv"]
    params:
        config["samples_csv"]
    run:
        shutil.copyfile('config/config.yml', output[0])
        shutil.copyfile(params[0], output[1])


# write the current repo release to a file
rule write_repo_release:
    output:
        "results/" + tmstmp + "_run_details_{sample}/repo_release.txt"
    shell:
        """
        git describe --tag > {output}
        """        

        
# make coverage matrix across reproducible peak summits
rule make_coverage_matrix_across_peaks:
    input:
        unpack(
            lambda wildcards: {
                "bw": samples_table.loc[wildcards.sample, "bigwig"],
                "bed": samples_table.loc[wildcards.sample, "bed"]
            }
        ),
    output:
        mx = "results/matrixOfReadsAcrossPeakSummits/{sample}_readCountsAcrossSummits.tab",
        gz = "results/matrixOfReadsAcrossPeakSummits/{sample}_readCountsAcrossSummits.gz",
    params:
        brl=config["beforeRegionStartLength"],
        arl=config["afterRegionStartLength"],
        bns=config["binSize"],
        nop=config["numberOfProcessors"],
    envmodules:
        config["deeptools"],
    shell:
        """
        computeMatrix reference-point --outFileName {output.gz} -a {params.arl} -b {params.brl} --numberOfProcessors {params.nop} --smartLabels --outFileNameMatrix {output.mx} -S {input.bw} -R {input.bed}
        """

# make deeptools heat plots of coverage over reproducible peaks
rule make_deeptools_heatplot_of_reproducible_peaks:
    input:
        mx = "results/matrixOfReadsAcrossPeakSummits/{sample}_readCountsAcrossSummits.gz",
    output:
        "results/deeptoolsHeatPlotOfReadsAcrossPeakSummits/{sample}_heatPlotAcrossPeakSummits.pdf",
    params:
        rpl=config["referencePointLabel"],
        rgl=config["regionsLabel"],
        xal=config["xAxisLabel"],
        hmh=config["heatMapHeight"],
        hmw=config["headMapWidth"]
    envmodules:
        config["deeptools"],
    shell:
        """
        plotHeatmap --matrixFile {input.mx} --outFileName {output} --refPointLabel {params.rpl} --regionsLabel {params.rgl} --xAxisLabel {params.xal} --heatmapHeight {params.hmh} --heatmapWidth {params.hmw}
        """
        
# make heat plots of coverage over reproducible peaks
rule make_heatplot_of_reproducible_peaks:
    input:
        mx = "results/matrixOfReadsAcrossPeakSummits/{sample}_readCountsAcrossSummits.tab",
    output:
        "results/heatPlotOfReadsAcrossPeakSummits/{sample}_heatPlotAcrossPeakSummits.rds",
        #"results/heatPlotOfReadsAcrossPeakSummits/{sample}_heatPlotAcrossPeakSummits.pdf",
    params:
        config["colorsForHeatPlot"],
        config["heatplotBreaks"],
        config["pdfWidth"],
        config["pdfHeight"],
    envmodules:
        config["R"],
        config["Bioconductor"],
    script:
        "scripts/makeHeatPlot.R"
